<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>35</value>
  </metadata>
</root>